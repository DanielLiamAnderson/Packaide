name: Build
on: [push, pull_request]

jobs:
  test:
    name: Test Python ${{ matrix.py_version }} on ${{ matrix.config.os }} (${{ matrix.build_type }})
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        build_type: ["Debug", "RelWithDebInfo", "Release"]
        config:
        - { os: ubuntu-latest }
        py_version: ['3.6', '3.10']
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py_version }}

      - name: Ensure PATH
        run: echo "${{ matrix.config.lib_path }}" >> $GITHUB_PATH

      # Use apt to install CGAL on Ubuntu
      - name: Install CGAL (Linux)
        if: startsWith(matrix.config.os, 'ubuntu')
        run: sudo apt-get -qq install libcgal-dev

      # Use Homebrew to install CGAL on Mac (we also install Geos since Shapely is missing
      # the wheel for 3.10, but Shapely can compile itself if Geos is installed)
      - name: Install CGAL (Mac)
        if: startsWith(matrix.config.os, 'macos')
        run: brew install cgal geos

      # Use Conda to install CGAL on Windows
      - name: Install CGAL (Windows)
        if: startsWith(matrix.config.os, 'windows')
        run: $CONDA/condabin/conda.bat install -y -c conda-forge cgal-cpp

      - name: Install Shapely
        if: startsWith(matrix.config.os, 'windows') && matrix.py_version == '3.10'
        run: pip install https://download.lfd.uci.edu/pythonlibs/x6hvwk7i/Shapely-1.8.0-cp310-cp310-win_amd64.whl

      - name: Install Python libraries
        run: pip install -r requirements.txt

      - name: Configure
        run: |
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_PREFIX_PATH=${{ matrix.config.prefix_path }} ..

      - name: Build
        run: |
          cd build
          cmake --build .

      - name: Test
        run: |
          cd build
          cmake --build . --target check
