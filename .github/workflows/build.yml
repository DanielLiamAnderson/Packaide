name: Build
on: [push, pull_request]

jobs:

  test:
    name: Test Python ${{ matrix.py_version }} on ${{ matrix.config.os }} (${{ matrix.build_type }})
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        build_type: ["Debug", "Release"]
        config:
        - { os: ubuntu-latest }
        - { os: macos-latest }
        - { os: windows-latest, prefix_path="C:/Miniconda/Library", lib_path="C:/Miniconda/Library/bin" }
        py_version: ['3.6', '3.10']
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py_version }}

      - name: Install Python libraries
        run: pip install --user -r requirements.txt

      # Use apt to install CGAL on Ubuntu
      - name: Install CGAL (Linux)
        if: startsWith(matrix.config.os, 'ubuntu')
        run: sudo apt-get -qq install libcgal-dev

      # Use Homebrew to install CGAL on Mac
      - name: Install CGAL (Mac)
        if: startsWith(matrix.config.os, 'macos')
        run: brew install cgal

      # Use Conda to install CGAL on Windows
      - name: Install CGAL (Windows)
        if: startsWith(matrix.config.os, 'windows')
        run: $CONDA/condabin/conda.bat install -y -c conda-forge cgal-cpp

      - name: Configure
        run: |
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_PREFIX_PATH=${{ matrix.config.prefix_path }} ..

      - name: Build
        run: |
          cd build
          cmake --build .

      - name: Test
        run: |
          cd build
          PATH=$PATH:${{ matrix.config.lib_path }} cmake --build . --target check

  build_sdist:
    name: Build Source Distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build SDist
        run: pipx run build --sdist

      - name: Check metadata
        run: pipx run twine check dist/*

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz


  build_wheels:
    name: Build Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      # Note: We do not install CGAL here on Linux because the wheels are
      # built inside a docker image, so they won't see it anyway

      # Use Homebrew to install CGAL on Mac
      - name: Install CGAL (Mac)
        if: startsWith(matrix.os, 'macos')
        run: brew install cgal

      # Use Conda to install CGAL on Windows
      - name: Install CGAL (Windows)
        if: startsWith(matrix.os, 'windows')
        run: C:\Miniconda\condabin\conda.bat install -y -c conda-forge cgal-cpp

      - uses: pypa/cibuildwheel@v2.3.1

      - name: Verify clean directory
        run: git diff --exit-code
        shell: bash

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl
