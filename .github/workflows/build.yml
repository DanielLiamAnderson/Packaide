name: Build
on: [push, pull_request]

jobs:
  test:
    name: Test Python ${{ matrix.py_version }} on ${{ matrix.config.os }} (${{ matrix.build_type }})
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        build_type: ['Debug', 'RelWithDebInfo', 'Release']
        config:
        - { os: ubuntu-latest }
        py_version: ['3.6', '3.10']
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py_version }}

      - name: Install CGAL
        run: sudo apt-get -qq install libcgal-dev

      - name: Install Python libraries
        run: pip install -r requirements.txt

      - name: Configure
        run: |
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ..

      - name: Build
        run: |
          cd build
          cmake --build .

      - name: Test
        run: |
          cd build
          cmake --build . --target check


  benchmark:
    name: Benchmark Python ${{ matrix.py_version }} on ${{ matrix.config.os }} (${{ matrix.build_type }})
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        build_type: ['Release']
        config:
        - { os: ubuntu-latest }
        py_version: ['3.10']
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py_version }}
          
      - name: Install CGAL
        run: sudo apt-get -qq install libcgal-dev
        
      - name: Install Python libraries
        run: |
          pip install -r requirements.txt
          pip install matplotlib

      - name: Configure
        run: |
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_PREFIX_PATH=${{ matrix.config.prefix_path }} ..

      - name: Build
        run: |
          cd build
          cmake --build .

      - name: Benchmark
        run: |
          cd build
          cmake --build . --target benchmarks
          cmake --build . --target plots
          
      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: benchmarks-${{ matrix.config.os }}-${{ matrix.build_type }}-python${{ matrix.py_version }}
          path: ./build/benchmark/output/*

  install:
    name: Install with Python ${{ matrix.py_version }} on ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: ubuntu-latest }
        py_version: ['3.6', '3.10']
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py_version }}

      - name: Install CGAL
        run: sudo apt-get -qq install libcgal-dev

      - name: Install Python libraries
        run: pip install -r requirements.txt

      - name: Install
        run: |
          python -m pip install --user .

      - name: Verify installation
        run: |
          python -c 'import packaide'
